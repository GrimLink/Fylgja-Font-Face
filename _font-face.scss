// Fylgja (getfylgja.com)
// Licensed under MIT Open Source

@import "str-replace";
@import "font-styles";

/// @param {String} $name - Name of font
/// @param {String} $suffix - [null] Suffix of font
/// @param {String} $styles - [$suffix] Styles for font (weight & style)
/// @param {String} $unicode - [$u-latin] unicode range to use
/// @param {String} $path - ['../fonts'] path to file(s)
/// @param {String} $file-name - [null] file name, null = $name + $suffix
/// @param {list} $formats - [(local, woff2, woff)] list of file types
/// @param {string} $load - [swap] The loading option of the font
/// @return {String} - Return font weight and style
@mixin font-face(
    $name,
    $suffix: null,
    $styles: $suffix,
    $unicode: "U+0000â€”00FF",
    $path: "../fonts",
    $file-name: null,
    $formats: (local, woff2, woff),
    $load: swap
) {
    @if type-of($name) != string {
        @error "Name must be a string value";
    }
    @if type-of($suffix) != string {
        @if (type-of($suffix) == "null") and ($suffix == $styles) {
            $styles: "Regular";
        } @else {
            @error "Suffix must be a string value";
        }
    }
    $name-spaceless: str-replace(#{$name}, " ");
    $full-name: #{$name-spaceless};
    @if $suffix != null {
        $suffix-spaceless: str-replace(#{$suffix}, " ");
        $full-name: #{$name-spaceless}-#{$suffix-spaceless};
    }
    @if $file-name == null {
        $file-name: $full-name;
    }
    @font-face {
        font-family: "#{$name}";
        $format-local: null;
        $format-src: null;
        @each $format in $formats {
            @if $format == local {
                $format-local: local(
                    "#{if($suffix == "Regular", $name, $name $suffix)}"
                ),
                    local("#{$full-name}");
                @if $suffix == null {
                    $format-local: local("#{$name}");
                }
            } @else {
                $format-src: append(
                    $format-src,
                    url("#{$path}/#{$file-name}.#{$format}")
                    format("#{$format}"),
                    comma
                );
            }
        }
        @if ($format-local != null) {
            src: join($format-local, $format-src);
        } @else {
            src: $format-src;
        }
        unicode-range: $unicode;
        @include font-styles($styles);
        font-display: $load;
    }
}
